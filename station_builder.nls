
; building the station entrance and exit
to build-entrance
  ; we want to build it in the center of the map (y-cords) on the far right and fari left
  ask patches with [(pxcor < 2 or pxcor > (max-pycor - 2)) and abs(pycor - max-pycor / 2) < 3][

        set pcolor black

        set patch-type "entrance"
        ifelse pxcor < 2[
      set number 1][set number 4]  ; what number platform is it on
  ]
end


to build_benches [x_cordinate]
  ask patches with [pxcor = round (x_cordinate) and patch-type = "platform"  and pycor < max-pycor - 5][

    carefully[
    if pycor mod 25 = 0[
      set pcolor bench-col
      ask patch-at 0 1 [
        set pcolor bench-col
      ]
      ask patch-at 0 2[
        set pcolor bench-col
      ]
    ]][print "oor"]

  ]

end


; building a platform and connecting stairs
to build-platform [patch-selected platform-number startx endx]
  ask patch-selected [
    if pxcor >= startx and pxcor <= endx [
      ifelse (pycor >= min-pycor + stairs-size) [

      set pcolor 4
      set number platform-number
      set patch-type "platform"
    ][
        set pcolor black

        set patch-type "stairs"
        set number platform-number
      ]
  ]]


end

; building the train line out of patches
to build-line [patch-selected line-number startx endx]
  ask patch-selected [
   if pxcor >= startx and pxcor <= endx [
     ifelse (pycor >= min-pycor + stairs-size) [
     set pcolor red
     set number line-number
     set patch-type "line"
    ] [

        set pcolor black

        set patch-type "corridor"
        set number line-number
      ]
  ]]
end

to build-bench-set
  build_benches (platform-size / 3)
  build_benches (platform-size  + track-size / 2) + platform-size
   build_benches (platform-size  + 3 * track-size / 2 ) + platform-size
  build_benches (3 * platform-size + 2 * track-size) + platform-size / 3
end


; build the train station out of the patches
to set-up-station
  ask patches [
    build-platform self 4 (max-pxcor - platform-size) max-pxcor ; self refers the the particular patch (pixel)

    build-platform self 1 0 platform-size
    build-platform self 2 (platform-size + 2 * track-size)  (platform-size + 3 * track-size)
    build-platform self 3 (platform-size + 3 * track-size) (platform-size + 4 * track-size)
    build-line self 1 platform-size (platform-size + track-size)
    build-line self 2 (platform-size + track-size) (platform-size + 2 * track-size)
    build-line self 3 (2 * platform-size + 2 * track-size) (2 * platform-size + 3 * track-size)
    build-line self 4 (2 * platform-size + 3 * track-size) (2 * platform-size + 4 * track-size)
  ]
  build-entrance
  build-bench-set

  build-cameras
end

to create-camera [field dist x y head]
  create-cameras 1 [ set ycor y set xcor x set heading head set fov field set dis dist]
end

to add-cameras
  create-camera   65 1.5 * platform-size 0 max-pycor 145
  create-camera   65 1.5 * platform-size 0 stairs-size 35
  create-camera   65 1.5 * platform-size max-pxcor stairs-size 325
  create-camera   65 1.5 * platform-size max-pxcor max-pycor 215
end

to build-cameras
  add-cameras
   ask cameras[
    let d dis
    let f fov
   ask patches in-cone d f [
      let col pcolor
      let v [visibility] of patches
      if v != true[
       set pcolor pcolor + 2
       set visibility true
    ]
  ]
  ]

end
